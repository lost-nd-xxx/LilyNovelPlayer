＃タグ辞書



＠bg	（外部プラグイン読み上げ対応）==0
（when（b1）φ
（vncall,length,A0）>0&&φ
（count（b1）（描画中3）（b1）|（A0）,0,0|）==0（b1）φ
\p[3]\_l[0,0]φ
\_b["（A0）",inline,--option=foreground,--option=opaque,--option=fixed]φ
（set（b1）描画中3（b1）|（A0）,0,0|）φ
）



＠bg	（外部プラグイン読み上げ対応）==1
（when（b1）φ
（vncall,length,A0）>0（b1）φ
\p[3]\_l[0,0]φ
\_b["（A0）",inline,--option=foreground,--option=opaque,--option=fixed]φ
）



＠image	（外部プラグイン読み上げ対応）==0
（set（b1）__A3（b1）（vncall,zen2han,A3））φ
（when（b1）φ
（vncall,is_digit,__A3）==1&&φ
（count（b1）（描画中（__A3））（b1）|（A0）,（A1）,（A2）|）==0（b1）φ
（whenlist,（__A3）==,0,\0,1,\1,\p[（__A3）]）φ
\_l[（A1）,（A2）]φ
\_b["（A0）",inline,--option=foreground,--option=fixed（for、4、（Aの数）-1、1、,（A（C0）））]φ
（whenlist,（nop,）,φ
（vncall,length,__A3）<=0||（vncall,is_digit,__A3）==0,φ
（nop,）,φ
（__A3）==1||（__A3）==2||（__A3）==3,φ
（set（b1）描画中（__A3）（b1）|（A0）,（A1）,（A2）（描画中（__A3）））φ
）φ
）φ
（set,__A3,）



＠image	（外部プラグイン読み上げ対応）==1
（set（b1）__A3（b1）（vncall,zen2han,A3））φ
（when（b1）φ
（vncall,is_digit,__A3）==1（b1）φ
（whenlist,（__A3）==,0,\0,1,\1,\p[（__A3）]）φ
\_l[（A1）,（A2）]φ
\_b["（A0）",inline,--option=foreground,--option=fixed（for、4、（Aの数）-1、1、,（A（C0）））]φ
）φ
（set,__A3,）



＠freeimage	（外部プラグイン読み上げ対応）==0
\_q（when（b1）
（Aの数）==0（b1）
\p[3]\c
\p[2]\c
\1\c
\0\c
（set,描画中1,|）（set,描画中2,|）（set,描画中3,|）（b1）
（times（b1）
（Aの数）（b1）
（when（b1）
（vncall（b1）length（b1）A（C0））>0&&（vncall（b1）is_digit（b1）A（C0））==1（b1）φ
（call（b1）freeimage_core（b1）（A（C0）））
）
）
）\_q\0（__textcolor）



＠freeimage	（外部プラグイン読み上げ対応）==1
（nop,）



＠freeimage_core
（whenlist（b1）（A0）==（b1）
0（b1）
\0\c（b1）
1（b1）
\1\c（set,描画中1,|）（b1）
2（b1）
\p[2]\c（set,描画中2,|）（b1）
3（b1）
\p[3]\c（set,描画中3,|）（b1）
\p[（A0）]\c
）



＠名札
（when（b1）
（vncall,length,A0）>0（b1）φ
（文字色.normal）φ
（when（b1）φ
（Aの数）>1&&φ
（vncall,is_digit,A1）==1&&φ
（vncall,is_digit,A2）==1（b1）φ
\0\_l[（A1）,（A2）]φ
）φ
\_q\f[bold,1]（A0）\f[bold,0]\_qφ
（文字色.current）φ
）



＠next
（when（b1）（ハイド中）==1（b1）（ハイド部品）（b1）φ
\0φ
（whenlist、（nop、）、φ
（オート）==1、φ
\![sound,wait]\_w[（オート_待ち時間）]、φ
（スキップ）!=1、φ
\x[noclear]φ
）φ
\![（when,（外部プラグイン読み上げ対応）==1,raise,embed）,OnGamePlayCore,φ
（next接頭辞）（next数値）φ
（when（b1）（vncall,length,A0）>0（b1）φ
（for（b1）0（b1）（Aの数）-1（b1）1（b1）,（A（C0）））φ
）φ
]φ
）



＠nextset
（when（b1）（ハイド中）==1（b1）（ハイド部品）（b1）φ
\0φ
（set（b1）next接頭辞（b1）φ
（when（b1）（vncall,length,A0）==0（b1）シナリオ（b1）（A0））φ
）φ
（set（b1）next数値（b1）φ
（when（b1）（vncall,length,A1）==0（b1）１（b1）（A1））φ
）φ
（whenlist、（nop、）、φ
（オート）==1、φ
\![sound,wait]\_w[（オート_待ち時間）]、φ
（スキップ）!=1、φ
\x[noclear]φ
）φ
\![（when,（外部プラグイン読み上げ対応）==1,raise,embed）,OnGamePlayCore,φ
（next接頭辞）（next数値）φ
（when（b1）（vncall,length,A2）>0（b1）φ
（for（b1）2（b1）（Aの数）-1（b1）1（b1）,（A（C0）））φ
）φ
]φ
）



＠nextjump
（when（b1）（ハイド中）==1（b1）（ハイド部品）（b1）φ
\0φ
（when、（オート）==1、\![sound,wait]\_w[（オート_待ち時間）]）φ
\![（when,（外部プラグイン読み上げ対応）==1,raise,embed）,OnGamePlayCore,φ
（A0）φ
（when（b1）（vncall,length,A1）>0（b1）φ
（for（b1）1（b1）（Aの数）-1（b1）1（b1）,（A（C0）））φ
）φ
]φ
）



＠選択肢
（when（b1）（ハイド中）==1（b1）（ハイド部品）（b1）φ
\0φ
（選択肢_色変え）φ
\*\_qφ
\__q[OnGamePlayCore_Choiced,φ
（A1）φ
（for（b1）2（b1）（Aの数）-1（b1）1（b1）φ
,（A（C0））φ
）φ
]φ
（A0）φ
\__qφ
\_qφ
（選択肢_色戻し）φ
（when,（スキップ）==1&&（スキップ_選択肢後維持）!=1,（メニュー.スキップ停止.変数戻す））φ
（when,（オート）==1&&（スキップ_選択肢後維持）!=1,（メニュー.オート解除.変数戻す））φ
）



＠選択肢_色変え
（whenlist、（nop、）、φ
（vncall,length,文字色強制）>0、φ
（文字色強制）、φ
（既読設定_選択肢色変更）==1&&φ
（count（b1）（s_（ゲームID）.既読判定）（b1）|（A1）|）>0、φ
（文字色.選択肢.visited）φ
）



＠選択肢_色戻し
（whenlist、（nop、）、φ
（vncall,length,文字色強制）>0、φ
（文字色強制）、φ
（既読設定_選択肢色変更）==1&&φ
（count（b1）（s_（ゲームID）.既読判定）（b1）|（A1）|）>0、φ
（文字色.選択肢.normal）φ
）



＠オート解除
（when,（オート）==1&&（中断再開中）!=1,（メニュー.オート解除.変数戻す））



＠スキップ解除
（when,（スキップ）==1&&（中断再開中）!=1,（メニュー.スキップ停止.変数戻す））



＠バックログ追加
（split_reset）φ
（nop,（split（b1）（バックログ格納）（b1）|（b1）0（b1）0））φ
（whenlist（b1）（nop,）（b1）φ
（vncall,equal,A0,S0）==1&&（vncall,length,S0）>0&&（vncall,length,A0）>0（b1）φ
（nop,）（b1）φ
（compare,（A1）,1）==1&&（vncall,length,A0）>0（b1）φ
（vncall,バックログ追加_部品,A0）（b1）φ
（バックログ状態）==1&&（vncall,length,A0）>0（b1）φ
（vncall,バックログ追加_部品,A0）φ
）




＠バックログ追加_部品
（set（b1）バックログ格納（b1）φ
|（A0）φ
（times（b1）（calc（b1）（call（b1）存在確認（b1）バックログ.履歴最大数）-1）（b1）φ
（when（b1）（vncall,length,S（C0））>0（b1）|（S（C0）））φ
）φ
|φ
）



＠バックログ削除	（vncall,is_digit,A0）==0
（when（b1）（count（b1）（バックログ格納）（b1）|（A0）|）>0（b1）φ
（set（b1）バックログ格納（b1）φ
（erase_first（b1）（バックログ格納）（b1）|（A0））φ
））
＃数字以外で指定が来たらそのシナリオ名のログの最新の１つを消す



＠バックログ削除	（vncall,is_digit,A0）==1
（split_reset）φ
（set（b1）__count（b1）（split（b1）（バックログ格納）（b1）|（b1）0（b1）0））φ
（set（b1）バックログ格納（b1）|φ
（for（b1）0（b1）（__count）-1（b1）1（b1）φ
（when（b1）（C0）==（A0）（b1）φ
（S（C0））|φ
）））φ
（set,__count,）
＃数字のみで指定が来たらその番号を消す　０始まり



＠バックログ全削除
（set,バックログ格納,|）



＠メニュー許可
（set,メニュー状態.オート,1）φ
（set,メニュー状態.ギャラリー,1）φ
（set,メニュー状態.クイックセーブ,1）φ
（set,メニュー状態.クイックロード,1）φ
（set,メニュー状態.コンフィグ,1）φ
（set,メニュー状態.スキップ,1）φ
（set,メニュー状態.セーブ,1）φ
（set,メニュー状態.タイトルに戻る,1）φ
（set,メニュー状態.ハイド,1）φ
（set,メニュー状態.バックログ,1）φ
（set,メニュー状態.ロード,1）



＠メニュー不可
（set,メニュー状態.オート,0）φ
（set,メニュー状態.ギャラリー,0）φ
（set,メニュー状態.クイックセーブ,0）φ
（set,メニュー状態.クイックロード,0）φ
（set,メニュー状態.コンフィグ,0）φ
（set,メニュー状態.スキップ,0）φ
（set,メニュー状態.セーブ,0）φ
（set,メニュー状態.タイトルに戻る,0）φ
（set,メニュー状態.ハイド,0）φ
（set,メニュー状態.バックログ,0）φ
（set,メニュー状態.ロード,0）



＠変数読み出し
（when（b1）（count（b1）（s_（ゲームID）.オートセーブ）（b1）|（A0）:）>0（b1）φ
（set,__t,）φ
（split_reset）φ
（for（b1）φ
3（b1）φ
（calc,-1+（split（b1）（s_（ゲームID）.オートセーブ）（b1）|（b1）0（b1）0））（b1）φ
1（b1）φ
（when（b1）φ
（compare_head（b1）（S（C0））（b1）（A0）:）==1（b1）φ
（set（b1）__t（b1）（erase_first（b1）（S（C0））（b1）（A0）:））φ
）φ
）φ
（when（b1）（変数「__t」の存在）==1（b1）（__t））φ
（set,__t,）φ
）



＠変数読み出しg
（when（b1）（count（b1）（s_（ゲームID）.グローバルセーブ）（b1）|（A1）:）>0（b1）φ
（set,__t,）φ
（set（b1）__A0（b1）φ
（when（b1）（vncall,length,A0）<=0（b1）（ゲームID）（b1）（A0））φ
）φ
（split_reset）φ
（for（b1）φ
0（b1）φ
（calc,-1+（split（b1）（s_（__A0）.グローバルセーブ）（b1）|（b1）0（b1）0））（b1）φ
1（b1）φ
（when（b1）φ
（compare_head（b1）（S（C0））（b1）（A1）:）==1（b1）φ
（set（b1）__t（b1）（erase_first（b1）（S（C0））（b1）（A1）:））φ
）φ
）φ
（when（b1）（変数「__t」の存在）==1（b1）（__t））φ
（set,__t,）φ
）



＠音ロード
\![sound,load,"（A0）"]



＠音停止
（whenlist（b1）（nop,）（b1）φ
φ
（vncall,length,A0）<=0（b1）φ
\![sound,stop]φ
（set,再生中BGM,|）（set,再生中SE,|）（set,再生中VOICE,|）（b1）φ
φ
（equal（b1）（A0）（b1）音楽）==1（b1）φ
（when（b1）（vncall,length,再生中BGM）>1（b1）φ
\![sound,stop,"（再生中BGM）"]φ
（set,再生中BGM,|）φ
）（b1）φ
φ
（equal（b1）（A0）（b1）効果音）==1（b1）φ
（whenlist（b1）（nop,）（b1）φ
（count（b1）（再生中SE）（b1）|）==2（b1）φ
\![sound,stop,"（erase（b1）（再生中SE）（b1）|）"]φ
（set,再生中SE,|）（b1）φ
（count（b1）（再生中SE）（b1）|）>2（b1）φ
（split_reset）φ
（times（b1）（split（b1）（再生中SE）（b1）|（b1）0（b1）0）（b1）φ
\![sound,stop,"（S（C0））"]φ
（set（b1）再生中SE（b1）（erase（b1）（再生中SE）（b1）|（再生中SE）））φ
）φ
）（b1）φ
φ
（equal（b1）（A0）（b1）ボイス）==1（b1）φ
（when（b1）（vncall,length,再生中VOICE）>1（b1）φ
\![sound,stop,"（再生中VOICE）"]φ
（set,再生中VOICE,|）φ
）（b1）φ
φ
（vncall,length,A0）>0（b1）φ
\![sound,stop,"（A0）"]φ
（when（b1）（vncall,count,再生中BGM,A0）>0（b1）φ
（set,再生中BGM,|）φ
）φ
（when（b1）（count（b1）（再生中SE）（b1）|（A0）|）>0（b1）φ
（set（b1）再生中SE（b1）（erase（b1）（再生中SE）（b1）|（A0）））φ
）φ
（when（b1）（vncall,count,再生中VOICE,A0）>0（b1）φ
（set,再生中VOICE,|）φ
）φ
φ
）



＠音楽
（when（b1）（vncall,equal,再生中BGM,A0）==0（b1）φ
（when（b1）（vncall,length,再生中BGM）>1（b1）φ
\![sound,stop,"（再生中BGM）"]φ
）φ
\![sound,（when（b1）（vncall,length,A1）>0（b1）（A1）（b1）play）,"（A0）",--volume=（音量_BGM）]φ
（set（b1）再生中BGM（b1）（A0））φ
）
＃現在再生中の音楽と同じものが再度指定された場合は何もしない
＃多重再生不可



＠効果音
（when（b1）φ
（vncall,length,A0）>0&&（中断再開中）!=1&&（バックログ中）!=1&&（スキップ）!=1（b1）φ
\![sound,（when（b1）（vncall,length,A1）>0（b1）（A1）（b1）play）,"（A0）",--volume=（音量_SE）]φ
）φ
（set（b1）再生中SE（b1）|（A0）（再生中SE））
＃中断等から再開中は鳴らさない
＃多重再生可



＠ボイス
（when（b1）φ
（vncall,length,A0）>0&&（中断再開中）!=1&&（バックログ中）!=1&&（スキップ）!=1（b1）φ
（when（b1）（vncall,length,再生中VOICE）>1（b1）φ
\![sound,stop,"（再生中VOICE）"]φ
）φ
\![sound,play,"（A0）",--volume=（音量_VOICE）]φ
（set（b1）再生中VOICE（b1）（A0））φ
）
＃中断等から再開中は鳴らさない
＃多重再生不可



＊OnSoundStop
＄__tmp	（when,（vncall,count,再生中BGM,R0）>0,（set,再生中BGM,|））
＄再生中SE	（when（b1）（count（b1）（再生中SE）（b1）|（R0）|）>0（b1）（erase（b1）（再生中SE）（b1）|（R0））（b1）（再生中SE））
＄__tmp	（when,（vncall,count,再生中VOICE,R0）>=1,（set,再生中VOICE,|））
＃「再生中〇〇」と同じファイル名が停止した場合は再生中〇〇を初期化する
＃効果音のみ多重再生を許可しているため、該当ファイルのみ記録から消す



＊OnSoundError
＄__tmp	（when,（vncall,count,再生中BGM,R0）>0,（set,再生中BGM,|））
＄再生中SE	（when（b1）（count（b1）（再生中SE）（b1）|（R0）|）>0（b1）（erase（b1）（再生中SE）（b1）|（R0））（b1）（再生中SE））
＄__tmp	（when,（vncall,count,再生中VOICE,R0）>0,（set,再生中VOICE,|））
＃「再生中〇〇」と同じファイル名で失敗した場合は再生中〇〇を初期化する
＃効果音のみ多重再生を許可しているため、該当ファイルのみ記録から消す



＠メニューボタン
（when（b1）φ
（length（b1）（call,存在確認,メニューボタン配置.項目と順番））>0（b1）φ
\0\_q\_l[φ
（when（b1）（vncall,is_digit,A0）==1（b1）（vncall,zen2han,A0）（b1）0）,φ
（when（b1）（vncall,is_digit,A1）==1（b1）（vncall,zen2han,A1）（b1）0）φ
]φ
\f[align,φ
（whenlist（b1）（nop,）（b1）φ
（equal（b1）（A2）（b1）center）==1（b1）φ
center（b1）φ
（equal（b1）（A2）（b1）right）==1（b1）φ
right（b1）φ
left）φ
]φ
（split_reset）φ
（times（b1）φ
（split（b1）（call,存在確認,メニューボタン配置.項目と順番）（b1）|（b1）0（b1）0）（b1）φ
（vncall,メニューボタン_部品,S（C0））φ
（when（b1）φ
（calc,（Sの数）-1）>（C0）&&φ
（length（b1）（call,存在確認,メニューボタン配置.間隔））>0（b1）φ
（call,存在確認,メニューボタン配置.間隔）φ
）φ
）φ
\_q\_l[0,0]φ
）



＠メニューボタン_部品
（whenlist（b1）（nop,）（b1）φ
（equal（b1）（A0）（b1）ハイド）==1（b1）φ
（when（b1）φ
（count（b1）（__MenuCurrent）（b1）ハイド）==0&&φ
（メニュー状態.ハイド）==1（b1）φ
\_a[OnMenu,ハイド]（call,存在確認,メニューボタン.ハイド）\_a（b1）φ
（call,存在確認,メニューボタン.ハイド.押せない）φ
）（b1）φ
（equal（b1）（A0）（b1）クイックセーブ）==1（b1）φ
（when（b1）φ
（count（b1）（__MenuCurrent）（b1）クイックセーブ）==0&&φ
（メニュー状態.クイックセーブ）==1（b1）φ
\_a[OnMenu,クイックセーブ]（call,存在確認,メニューボタン.クイックセーブ）\_a（b1）φ
（call,存在確認,メニューボタン.クイックセーブ.押せない）φ
）（b1）φ
（equal（b1）（A0）（b1）クイックロード）==1（b1）φ
（when（b1）φ
（count（b1）（__MenuCurrent）（b1）クイックロード）==0&&φ
（メニュー状態.クイックロード）==1（b1）φ
\_a[OnMenu,クイックロード]（call,存在確認,メニューボタン.クイックロード）\_a（b1）φ
（call,存在確認,メニューボタン.クイックロード.押せない）φ
）（b1）φ
（when（b1）φ
（メニュー状態.（A0））==1（b1）φ
\_a[OnMenu,（A0）]（call（b1）存在確認（b1）メニューボタン.（A0））\_a（b1）φ
（call（b1）存在確認（b1）メニューボタン.（A0）.押せない）φ
）φ
）


